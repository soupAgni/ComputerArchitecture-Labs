DEPTH=1024; 	% Memory depth and width are required 
		% DEPTH is the number of addresses 
WIDTH = 32; 	% WIDTH is the number of bits of data per word
		% DEPTH and WIDTH should be entered as decimal numbers

ADDRESS_RADIX = DEC; 	% Address and value radixes are required
DATA_RADIX = HEX; 	% Enter BIN, DEC, HEX, OCT, or UNS; unless
			% otherwise specified, radixes = HEX

-- Specify values for addresses, which can be single address or range
-- SOME THINGS TO CONSIDER
-- 1) This memory is word-addressable, versus the MIPS conceptual byte-addressable memory.
--    This means that address 1 corresponds to word 1, address 2 corresponds to word 2, etc.
--    Since MIPS will be generating byte addresses, you will have to create some (very simple)
--    logic in your VHDL wrapper to deal with byte/word offsets. 
-- 2) The "single address" notation seems to be least likely to cause confusion so that is what
--    I recommend. 
-- 3) The values need to be in 32-bit hex form (i.e. don't use F when you really mean 0000000F).

CONTENT
BEGIN

0 :200a0005
00000000
00000000
00000000
00000000
00000000
200b0004
00000000
00000000
00000000
00000000
00000000
200c0007
00000000
00000000
00000000
00000000
00000000
014b4020
00000000
00000000
00000000
00000000
00000000
712a4002
00000000
00000000
00000000
00000000
00000000
014b4021
00000000
00000000
00000000
00000000
00000000
3148000f
00000000
00000000
00000000
00000000
00000000
014b4027
00000000
00000000
00000000
00000000
00000000
014b4025
00000000
00000000
00000000
00000000
00000000
00000000
3548000f
00000000
00000000
00000000
00000000
00000000
000a43c0
00000000
00000000
00000000
00000000
00000000
016a4004
00000000
00000000
00000000
00000000
00000000
000a4303
00000000
00000000
00000000
00000000
00000000
016a4007
00000000
00000000
00000000
00000000
00000000
000a4302
00000000
00000000
00000000
00000000
00000000
016a4006
00000000
00000000
00000000
00000000
00000000
014b4022
00000000
00000000
00000000
00000000
00000000
014b4023
00000000
00000000
00000000
00000000
00000000
014b4026
00000000
00000000
00000000
00000000
00000000
014b402a
00000000
00000000
00000000
00000000
00000000
014b402b
00000000
00000000
00000000
00000000
00000000
2948000f
00000000
00000000
00000000
00000000
00000000
2d48000f
00000000
00000000
00000000
00000000
00000000
110a0083
00000000
00000000
00000000
00000000
00000000
1d000083
00000000
00000000
00000000
00000000
00000000
110a0083
00000000
00000000
00000000
00000000
00000000
0501007d
00000000
00000000
00000000
00000000
00000000
1900007d
00000000
00000000
00000000
00000000
00000000
150a007d
00000000
00000000
00000000
00000000
00000000
0511007d
00000000
00000000
00000000
00000000
00000000
0510007d
00000000
00000000
00000000
00000000
00000000
08000139
00000000
00000000
00000000
00000000
00000000
0c00013f
00000000
00000000
00000000
00000000
00000000
01404009
00000000
00000000
00000000
00000000
00000000
01000008
00000000
00000000
00000000
00000000
00000000
80090064
00000000
00000000
00000000
00000000
00000000
900a0064
00000000
00000000
00000000
00000000
00000000
840b0064
00000000
00000000
00000000
00000000
00000000
940cff9c
00000000
00000000
00000000
00000000
00000000
8c0dff9c
00000000
00000000
00000000
00000000
00000000
a00e0064
00000000
00000000
00000000
00000000
00000000
a40f0064
00000000
00000000
00000000
00000000
00000000
ac180064
00000000
00000000
00000000
00000000
00000000
3c190064
00000000
00000000
00000000
00000000
00000000
712a4002
00000000
00000000
00000000
00000000
00000000
016a6024
00000000
00000000
00000000
00000000
00000000
014b6820
00000000
00000000
00000000
00000000
00000000
016a7022
00000000
00000000
00000000
00000000
00000000
016a7820
00000000
00000000
00000000
00000000
00000000
716ac002
00000000
00000000
00000000
00000000
00000000
016a7023
00000000
00000000
00000000
00000000
00000000
25500064
00000000
00000000
00000000
00000000
00000000
014b8821
00000000
00000000
00000000
00000000
00000000
014ca020


;

END;
